<?php require_once('../../../private/initialize.php'); 
require_login();
?>
<!--
  We want the  '&' to be seen as data and not a meaningful 
character in the url. 
<a href="page.php?company=Widgets&More">Link</a>
See  Reserved characters in URLS on Chapter 2 video 4. 

When constructing constructing URLS for links, we want to encode 
the characters  so they can't interfere with the function of the URL.
Encoding reserved character(1st row on table) means converting that character to its 
equivalent(second row in table)->They have % sign and hex digits.
When page is processed by php, we can decode these values to restore 
the original character. So we use 
urlencode($string) and
rawurlencode($string)

/*******************/
urlencode($string) 
rawurlencode($string)

-Anything that is not reserved characters(Letters,
numbers, underscore and dash are unchanged)
-Reserved characters are encoded.
-urlencode: spaces become "+".
-rawurlencode: spaces become "%20".

How and Where to use it?
rawurlencode the path 
->Path is the part before the "?".
Spaces must be encoded as "%20".

urlencode the query string 
Query string is the part after the "?".
Spaces are better encoded as "+".

rawurlencode is going to be rarely used because most of the time the path is not something 
that's going to be dynamically generated by php.

urlencode: Since query string is very dynamic(can contain values from Database, values assembled together in php,
 values that user has given you). As a result, urlencode is going to be used 
 more often than rawurlencode

Functions that decode the characters being urlencoded and rawurlencoded.
urldecode($string) and rawurldecode($string)
->These are rarely needed because PHP automatically calls 
the decode functions  when it receives a url. 
->As soon as PHP gets that URL, it parses it, it figures out whre 
the query parameters are , it decodes the values, and then it puts 
them into your superglobal forget, 

/********video chapter 2  lecture 5***********/
Encode for HTML 

When building pages, we may insert data from user, database,
cookies, or from other resources. When doing this, 
we should make sure that we don't lose control of the html at the same time.

ex: 
<?php// $username = "Kevin"; ?>
Suppose we pull out this value from a database. 
Somewhere on the html page, we're going to output that value. 
<div id = "name"><?php// echo $username; ?></div>

if our value more complex than "Kevin", say 
$username = "<strong>Kevin</strong>";
or
$username = "<strong>Kevin";
or $username = "Kevin </div>";
 This would break our layout, losing our control of the html. 
 Solution: 

 Watch out for reserved characters in the html(<, >, &, ")
 We want to encode them into harmless equivalent and HTML provides 
   character entities that begin with the & sign that do exactly that. 
   example: < -> &lt or > -> &gt.
   If we use &lt; , it will display to user as a '<', but 
   it won't be considered the opening of an HTML tag.
   It's not a powerful character, it's just text at that point
    we use htmlspecialchars($string) function to get this 
   encoding. 

Watch out also for the Cross-site scripting
->XSS, attacker tricks a web page into outputting JS 
->Unfortunately, this code is trusted by browser and executed. 
->major security vulnerability 
Remmber to do htmlspecialchars every time you render data

-->





<?php

//$id = isset($_GET['id']) ? $_GET['id']: '1';
  $id = $_GET['id'] ?? '1'; //PHP >7.0


$subject = find_subject_by_id($id);
  $page_set = find_pages_by_subject_id($id);




?>
<?php $page_title = 'Show Subject'; ?>
<?php include(SHARED_PATH . '/staff_header.php'); ?>


<div id="content">
    <!--&laquo is the back arrow html entity -->
    <a class="back-link" href="<?php echo url_for('/staff/subjects/index.php')?>">&laquo; Back to List</a>

    <div class="subject show">
      <h1>Subject: <?php echo h($subject['menu_name']); ?></h1>


      <div class="attributes">
          <dl>
              <dt>Menu Name</dt>
              <dd><?php echo h($subject['menu_name']);?></dd>
          </dl>
          <dl>
              <dt>Position</dt>
              <dd><?php echo h($subject['position']);?></dd>
          </dl>
          <dl>
              <dt>Visible</dt>
              <dd><?php echo $subject['visible'] == '1' ? 'true' : 'false'; ?></dd>
          </dl>
      </div>

      <hr />

      <div class="pages listing">    
     

        <h2>Pages</h2>

       <div class="actions">
           <a class="action" href="<?php echo url_for('/staff/pages/new.php?subject_id=' . h(u($subject['id']))) ?>">Create New Page</a>
        </div>
         <table class="list">
        
          <tr>
            <th>Page ID</th>
            
            <th>Page Position</th>
            <th>Page Visible</th>
  	        <th>Page Name</th>
            <th>&nbsp;</th>
  	        <th>&nbsp;</th>
            <th>&nbsp;</th>
            <th>&nbsp;</th>
          </tr>

          <?php while($page = mysqli_fetch_assoc($page_set)) {

              $pageSubjectName = find_subject_by_page_subject_id($page['subject_id']);
              ?>
          <tr>
          
            <td><?php echo h($page['id']);?></td>

            <td><?php echo h($page['subject_id'])?></td>
              
            <td><?php echo h($page['position']); ?> </td>
            <td><?php echo $page['visible'] == 1 ? 'true': 'false'; ?></td>
            <td><?php echo h($page['menu_name']);?> </td>
            <td><a class="action" href="<?php echo url_for('/staff/pages/show.php?id=' . h(u($page['id'])));?>">View</a></td>
            <td><a class="action" href="<?php echo url_for('/staff/pages/edit.php?id=' . h(u($page['id']))); ?>">Edit</a></td>
            <td><a class="action" href="<?php echo url_for('/staff/pages/delete.php?id=' . h(u($page['id'])));?>">Delete</a></td>
           </tr> 
          <?php } ?>
        </table>

          <?php
            mysqli_free_result($page_set);
          ?> 
    </div>


    </div>
</div>


<?php //include(SHARED_PATH . '/staff_footer.php'); ?>

<!-- u means urlencode -->
<!--
<a href="show.php?name=<?php echo u('John Doe'); ?>">Link</a><br />

<a href="show.php?company=<?php echo u('Widgets&More'); ?>">Link</a><br />

<a href="show.php?query=<?php echo u('!#*?'); ?>">Link</a><br />
-->